package homework;

public class Ant_method {

	
	public String getNextLine(String currentLine) {
		// 같은 숫자 담는 변수
		String tempLine = "";	
		StringBuilder nextLine = new StringBuilder("");
		
		for (int i=0; i < currentLine.length(); i++) {
			// 문자열의 길이가 1일때 (첫 실행때만 동작함)
			if (currentLine.length() == 1) {
				nextLine.append(sameNumCnt(currentLine.toString()));
			}
			// 문자열의 끝을 감지했을 때
			else if (i == currentLine.length()-1) {
				// 이전문자와 현재문자가 같을 때
				if (currentLine.charAt(i) == currentLine.charAt(i-1)) {
					tempLine += currentLine.charAt(i);					// tempLine에 현재문자를 추가해주고
					nextLine.append(sameNumCnt(tempLine));				// tempLine을 계산한 값을 nextLine에 추가해준다.
				// 이전문자와 현재문자가 다를 때
				} else {
					// tempLine
					tempLine += currentLine.charAt(i);						// tempLine에 현재문자를 추가해주고
					nextLine.append(sameNumCnt(tempLine));					// tempLine을 계산한 값을 nextLine에 추가해준다.
				}
				// 마지막 문자까지 확인했기때문에 무조건 tempLine을 비워준다.
				tempLine = "";
			}
			// 현재문자와 다음문자가 같을 때
			else if (currentLine.charAt(i) == currentLine.charAt(i+1)) {
				tempLine += currentLine.charAt(i);
			} else if (currentLine.charAt(i) != currentLine.charAt(i+1)) {	// 현재문자와 다음문자가 다를 때
				tempLine += currentLine.charAt(i);							// tempLine에 현재문자를 추가해주고
				nextLine.append(sameNumCnt(tempLine));						// tempLine을 계산한 값을 nextLine에 추가해준다.
				tempLine = "";
			}
		}
		
		return String.valueOf(nextLine);
	}
	
	// 같은숫자가 몇개인지 카운트해줌 ex) 1111 -> 14
	public String sameNumCnt(String line) {
		String res = String.valueOf(line.charAt(0)) + String.valueOf(line.length());
		
		return res;
	}
	
	public boolean compareNextChar()
}
